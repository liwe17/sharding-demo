spring.application.name=sharding-jdbc-vertical-demo

spring.shardingsphere.mode.type=Memory

# 打印SQL
spring.shardingsphere.props.sql-show=true

# 数据源配置
spring.shardingsphere.datasource.names=db-user,db-order

spring.shardingsphere.datasource.db-user.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.db-user.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db-user.url=jdbc:mysql://localhost:3306/db_user
spring.shardingsphere.datasource.db-user.username=root
spring.shardingsphere.datasource.db-user.password=123456

spring.shardingsphere.datasource.db-order.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.db-order.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db-order.url=jdbc:mysql://localhost:3306/db_order
spring.shardingsphere.datasource.db-order.username=root
spring.shardingsphere.datasource.db-order.password=123456

# 标准分片表配置
# 由数据源名+表名组成,以小数点分隔.多个表以逗号分隔,支持 inline 表达式.
# 缺省表示使用已知数据源与逻辑表名称生成数据节点,用于广播表(即每个库中都需要一个同样的表用于关联查询,多为字典表)或只分库不分表且所有库的表结构完全一致的情况
spring.shardingsphere.rules.sharding.tables.t_user.actual-data-nodes=db-user.t_user
spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=db-order.t_order
